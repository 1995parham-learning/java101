/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package kafka.producer;

import java.util.Properties;
import java.util.Scanner;

import org.apache.kafka.clients.producer.KafkaProducer;
import org.apache.kafka.clients.producer.ProducerRecord;

public class App {
  public static void main(String[] args) {
    Properties props = new Properties();

    props.put("bootstrap.servers", "127.0.0.1:9092");
    props.put("key.serializer", "org.apache.kafka.common.serialization.StringSerializer");
    props.put("value.serializer", "io.confluent.kafka.serializers.KafkaJsonSerializer");

    var producer = new KafkaProducer<String, String>(props);

    var reader = new Scanner(System.in);
    int i = 0;

    while (true) {
      i++;

      System.out.printf("%d > ", i);

      String line = reader.nextLine();

      if (line.equals("quit")) {
        break;
      }

      var record = new ProducerRecord<String, String>("topic", String.format("l-%s", i), line);

      try {
        // fire and forget
        // producer.send(record);

        producer.send(record, (metadata, exception) -> {
          if (exception != null) {
            exception.printStackTrace();
          } else {
            System.out.printf("message offset: %d\n", metadata.offset());
          }
        });
      } catch (Exception e) {
        e.printStackTrace();
      }
    }

    producer.close();
    reader.close();
  }
}
